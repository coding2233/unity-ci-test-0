# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: unityci/editor:ubuntu-2021.3.1f1-linux-il2cpp-1.0.1
          options: -v ${{ github.workspace }}:/work
          run: |
            cd /work
            ls -alh
            wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            dpkg -i packages-microsoft-prod.deb
            apt update && apt install -y dotnet-runtime-6.0
            ls -alh .ci/unihacker
            export UNITY_PATH=/opt/unity
            export EXEC_METHOD=PATCH
            dotnet .ci/unihacker/Unihacker.dll
            mkdir build
            xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' unity-editor -quit -projectPath $(pwd) -logFile /dev/stdout -batchmode -nographics -buildLinux64Player ./build/a
            - ls -alh
